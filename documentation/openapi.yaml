openapi: 3.0.1
info:
  title: "Delilah RestÃ³ API"
  description: "This is the REST API documentation for the Dlilah restaurant web application."
  version: "1.0.0"
servers:
  - url: "http://localhost/"
tags:
  - name: Users
  - name: Products
  - name: Orders
paths:
  /register:
    post:
      tags:
        - Users
      summary: Register as user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/register"
  /login:
    post:
      tags:
        - Users
      summary: Start sesion
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/login"
  /users:
    get:
      tags:
        - Users
      summary: List users
      parameters:
        - name: Bearer token
          in: header
          description: user`s token (received when you log in or register)
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
          required: true
        - name: "/:id"
          in: path
          description: Required if looking for a single product
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/user"
  /products:
    get:
      tags:
        - Products
      summary: List all products
      parameters:
        - name: Bearer token
          in: header
          description: Users`s token (received when you log in or register)
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
          required: true
        - name: "/:id"
          in: path
          description: Required if looking for a single product
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/getProducts"
    post:
      tags:
        - Products
      summary: Create new product
      parameters:
        - name: Bearer token
          in: header
          description: Users`s token (received when you log in or register)
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6InVzZXIiLCJmZWNoYSI6MTU4ODExOTQ3OTczNywiaWF0IjoxNTg4MTE5NDc5fQ.GepGC9_vJ9pQH15BAtx1P5xV7AEhdj2mhHqvi1I826o
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/postProducts"
    put:
      tags:
        - Products
      summary: Edit product
      parameters:
        - name: Bearer token
          in: header
          description: Users`s token (received when you log in or register)
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
          required: true
        - name: "/:id"
          in: path
          description: Required if looking for a single product
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/postProducts"
    delete:
      tags:
        - Products
      summary: Delete products
      parameters:
        - name: Bearer token
          in: header
          description: Users`s token (received when you log in or register)
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
          required: true
        - name: "/:id"
          in: path
          description: Required if looking for a single product
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/getProducts"
  /orders:
    get:
      tags:
        - Orders
      summary: List all orders
      parameters:
        - name: Bearer token
          in: header
          description: Users`s token (received when you log in or register)
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
          required: true
        - name: "/:id"
          in: path
          description: Required if looking for a single order
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      tags:
        - Orders
      summary: Create a new order
      parameters:
        - name: Bearer token
          in: header
          description: Users`s token (received when you log in or register)
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "Your order has been successfully sent"
                  rta:
                    type: integer
                    description: id of the order created
                    example: 6
    put:
      tags:
        - Orders
      summary: Update order
      parameters:
        - name: Bearer token
          in: header
          description: Users`s token (received when you log in or register)
          schema:
            type: string
            example: >-
              eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
          required: true
        - name: "/:id"
          in: path
          description: Required if looking for a single order
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: "The order has been updated"
                  rta:
                    type: number
                    description: Updated order id
                    example: 4
  delete:
    tags:
      - Orders
    summary: Delete order
    parameters:
      - name: Bearer token
        in: header
        description: Users`s token (received when you log in or register)
        schema:
          type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
        required: true
      - name: "/:id"
        in: path
        description: Required if looking for a single order
        schema:
          type: integer
          example: 1
        required: true
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              type: object
              properties:
                msg:
                  type: string
                  example: "The order has been deleted"
                rta:
                  type: number
                  description: Updated order id
                  example: 4
components:
  schemas:
    login:
      type: object
      properties:
        msg:
          type: string
          description: Brief message about the request
          example: Welcome to Delilah Resto
        token:
          type: string
          description: Token to use on the rest of the endpoints
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
    register:
      type: object
      properties:
        msg:
          type: string
          description: Brief message about the request
          example: You are registered
        token:
          type: string
          description: Token to use on the rest of the endpoints
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM
    user:
      type: object
      properties:
        msg:
          type: string
          example: "Delilah Resto users"
        rta:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              userName:
                type: string
                example: "admin"
              name:
                type: string
                example: "Mafalda"
              lastName:
                type: string
                example: "PÃ©rez"
              email:
                type: string
                example: "admin@delilah.com"
              phone:
                type: number
                example: 3412223344
              address:
                type: string
                example: "Calle Chile 371"
              password:
                type: string
                example: "admin"
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6ImFkbWluIiwiZmVjaGEiOjE1OTcwODQwNzY1NjgsImlhdCI6MTU5NzA4NDA3Nn0.AZZDNlEErjIT6uYTaAA7EztXCbCRAqUCyQ1Byg1afUM"
              is_admin:
                type: boolean
                example: 1
    getProducts:
      type: object
      properties:
        msg:
          type: string
          description: Brief message about the request
          example: Delilah Resto Products
        rta:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    postProducts:
      type: object
      properties:
        msg:
          type: string
          description: Brief message about the request
          example: "The product has been successfully created"
        rta:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: Hamburguesa ClÃ¡sica
              description:
                type: string
                example: HamClas
              ingredients:
                type: string
                example: MedallÃ³n de carne y queso cheddar
              price:
                type: number
                example: 350
              img:
                type: string
                example: >-
                  https://www.pexels.com/es-es/foto/a-la-barbacoa-a-la-parrilla-almuerzo-bollo-1552641/
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Hamburguesa ClÃ¡sica
        description:
          type: string
          example: HamClas
        ingredients:
          type: string
          example: MedallÃ³n de carne y queso cheddar
        price:
          type: number
          example: 350
        img:
          type: string
          example: >-
            https://www.pexels.com/es-es/foto/a-la-barbacoa-a-la-parrilla-almuerzo-bollo-1552641/
    Order:
      type: object
      properties:
        state:
          type: string
          example: "nuevo"
        time:
          type: string
          example: "2020-08-27T19:37:39.000Z"
        orderNumber:
          type: integer
          example: 4
        description:
          type: string
          example: "1XHamDel"
        payment:
          type: string
          example: "efectivo"
        total:
          type: number
          example: 400.50
        user:
          type: string
          example: "Pepe Grillo"
        address:
          type: string
          example: "Calle Imaginaria 123"
